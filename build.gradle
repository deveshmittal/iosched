/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all
// sub-projects/modules.

buildscript {
    ext {
        // App version
        versionName = '0.0.1' // X.Y.Z; X = Major, Y = minor, Z = Patch level
        versionCodeBase = 001 // XYYZZM; M = Module (tv, mobile)
        versionCodeTv = versionCodeBase + 2
        versionCodeMobile = versionCodeBase + 3

        // SDK and tools
        compileSdkVersion = 29
        minSdkVersion = 21
        minTvSdkVersion = 21 // TV was introduced with Lollipop, min SDK should be 21.
        targetSdkVersion = 29

        // App dependencies
        androidGradlePluginVersion = '3.6.1'
        appcompatVersion = '1.1.0'
        activityVersion = '1.1.0'
        cardviewVersion = '1.0.0'
        archTestingVersion = '2.0.0'
        arcoreVersion = '1.7.0'
        browserVersion = '1.2.0'
        constraintLayoutVersion = '1.1.3'
        coreVersion = '1.2.0'
        crashlyticsVersion = '2.10.1'
        dagger = "2.27"
        dataBindingCompilerVersion = '3.0.1'
        drawerLayoutVersion = '1.1.0-alpha02'
        espressoVersion = '3.1.1'
        fabricVersion = '1.31.2'
        firebaseAnalyticsVersion = '17.2.3'
        firebaseAuthVersion = '19.3.0'
        firebaseConfigVersion = '19.1.3'
        firebaseFirestoreVersion = '21.4.1'
        firebaseFunctionsVersion = '19.0.2'
        firebaseMessagingVersion = '20.1.3'
        firebaseUiVersion = "6.2.0"
        flexboxVersion = "2.0.1"
        fragmentVersion = "1.2.3"
        glideVersion = "4.11.0"
        googleMapUtilsVersion = "1.0.2"
        googlePlayServicesMapsVersion = '17.0.0'
        googlePlayServicesVisionVersion = '17.0.2'
        googleServicesVersion = "4.3.3"
        gsonVersion = "2.8.6"
        hamcrestVersion = '1.3'
        junitVersion = '4.12'
        kotlinVersion = '1.3.71'
        ktxVersion = "1.2.0"
        leanbackVersion = '1.0.0'
        legacySupportVersion = '1.0.0'
        lifecycleVersion = '2.1.0-beta01'
        lottieVersion = "3.0.0"
        materialVersion = '1.1.0'
        mockitoVersion = "3.3.0"
        mockitoKotlinVersion = "1.6.0"
        navigationVersion = "2.2.1"
        okhttpVersion = "4.4.0"
        okioVersion = '2.5.0'
        pageIndicatorVersion = "1.3.0"
        roomVersion = '2.2.5'
        rulesVersion = '1.1.1'
        runnerVersion = '1.1.1'
        testExtVersion = '1.1.0'
        threetenabpVersion = "1.2.3"
        threetenbpVersion = "1.4.2"
        timberVersion = "4.7.1"
        tvproviderVersion = '1.0.0'
    }

    repositories {
        google()
        mavenCentral()
        jcenter()
        maven {
            url 'https://maven.fabric.io/public'
        }
        // Android Build Server
        maven { url '../iosched-prebuilts/m2repository' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$androidGradlePluginVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.google.gms:google-services:$googleServicesVersion"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationVersion"
        classpath "io.fabric.tools:gradle:$fabricVersion"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "com.diffplug.gradle.spotless" version "3.17.0"
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }

        // For Android Build Server
        // - Material Design Components
        maven { url "${rootProject.projectDir}/../iosched-prebuilts/repository" }
        // - Other dependencies
        maven { url "${rootProject.projectDir}/../iosched-prebuilts/m2repository" }
        // - Support Libraries, etc
        maven {
            url "${rootProject.projectDir}/../../../prebuilts/fullsdk/linux/extras/support/m2repository"
        }

        flatDir {
            dirs "libs"
            dirs project(":ar").file("libs")
        }
    }
}

subprojects {
    apply plugin: 'com.diffplug.gradle.spotless'
    spotless {
        kotlin {
            target "**/*.kt"
            ktlint("0.29.0").userData([
                    'max_line_length': '100',
            ])
            licenseHeaderFile project.rootProject.file('copyright.kt')
        }
    }

    // `spotlessCheck` runs when a build includes `check`, notably during presubmit. In these cases
    // we prefer `spotlessCheck` run as early as possible since it fails in seconds. This prevents a
    // build from running for several minutes doing other intensive tasks (resource processing, code
    // generation, compilation, etc) only to fail on a formatting nit.
    // Using `mustRunAfter` avoids creating a task dependency. The order is enforced only if
    // `spotlessCheck` is already scheduled to run, so we can still build and launch from the IDE
    // while the code is "dirty".
    tasks.whenTaskAdded {
        if (name == 'preBuild') {
            mustRunAfter 'spotlessCheck'
        }
    }
}
